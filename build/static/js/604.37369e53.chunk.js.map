{"version":3,"file":"static/js/604.37369e53.chunk.js","mappings":"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","sources":["hooks/useUserActivityTime.jsx","pages/ProfilePage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getDatabase, ref, onValue } from 'firebase/database';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nconst useUserActivityTime = () => {\r\n  const [totalTime, setTotalTime] = useState(0);\r\n  const auth = getAuth();\r\n  const db = getDatabase();\r\n\r\n  useEffect(() => {\r\n    if (auth.currentUser) {\r\n      const userId = auth.currentUser.uid;\r\n      const timeRef = ref(db, `users/${userId}/activetime/time`);\r\n      \r\n      const unsubscribe = onValue(timeRef, (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          setTotalTime(snapshot.val());\r\n        }\r\n      });\r\n\r\n      return () => unsubscribe();\r\n    }\r\n  }, [auth.currentUser]);\r\n\r\n  const formatTime = (milliseconds) => {\r\n    const totalSeconds = Math.floor(milliseconds / 1000);\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m`;\r\n    } else if (minutes > 0) {\r\n      return `${minutes}m`;\r\n    } else {\r\n      return `${totalSeconds}s`;\r\n    }\r\n  };\r\n\r\n  return { totalTime, formatTime };\r\n};\r\n\r\nexport default useUserActivityTime;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTheme } from \"../context/ThemeContext\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { ref, get, child } from \"firebase/database\";\r\nimport { database } from \"../firebase\";\r\nimport SignInRequiredPage from \"./SignInRequiredPage\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport useUserActivityTime from '../hooks/useUserActivityTime';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// SVG Icons\r\nconst Icons = {\r\n  Edit: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Trophy: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Star: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Calendar: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Mail: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Settings: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\r\n      />\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Moon: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Sun: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Bell: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Shield: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\r\n      />\r\n    </svg>\r\n  ),\r\n  Eye: () => (\r\n    <svg\r\n      className=\"w-5 h-5\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n      />\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={2}\r\n        d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n      />\r\n    </svg>\r\n  ),\r\n};\r\n// Helper functions for timestamp conversion\r\nconst parseFirebaseTimestamp = (timestampKey) => {\r\n  if (!timestampKey) return new Date(NaN);\r\n\r\n  // Replace the last underscore before milliseconds with a dot\r\n  const fixed = timestampKey.replace(\r\n    /T(\\d{2})_(\\d{2})_(\\d{2})_(\\d{3})Z/,\r\n    'T$1:$2:$3.$4Z'\r\n  );\r\n\r\n  const date = new Date(fixed);\r\n\r\n  return isNaN(date.getTime()) ? new Date(NaN) : date;\r\n};\r\n\r\nconst getStatusColor = (status) => {\r\n  switch (status) {\r\n    case \"Accepted\":\r\n      return \"text-green-600 bg-green-100 dark:text-green-400 dark:bg-green-900/30\";\r\n    case \"Wrong Answer\":\r\n      return \"text-red-600 bg-red-100 dark:text-red-400 dark:bg-red-900/30\";\r\n    case \"Runtime Error\":\r\n      return \"text-yellow-600 bg-yellow-100 dark:text-yellow-400 dark:bg-yellow-900/30\";\r\n    default:\r\n      return \"text-gray-600 bg-gray-100 dark:text-gray-400 dark:bg-gray-900/30\";\r\n  }\r\n};\r\n\r\n\r\nconst formatFirebaseTimestamp = (timestampKey) => {\r\n  const date = parseFirebaseTimestamp(timestampKey);\r\n\r\n  if (isNaN(date.getTime())) {\r\n    console.warn('Invalid date for timestamp:', timestampKey);\r\n    return 'N/A';\r\n  }\r\n\r\n  return date.toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit',\r\n  });\r\n};\r\n\r\n// Format join date from timestamp\r\nconst formatJoinDate = (timestamp) => {\r\n  if (!timestamp) return \"Unknown\";\r\n  const date = new Date(timestamp);\r\n  return date.toLocaleDateString(\"en-US\", { month: \"long\", year: \"numeric\" });\r\n};\r\n\r\n\r\nfunction ProfilePage() {\r\n  const { theme } = useTheme();\r\n  const { user, logout, loading } = useAuth();\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n  const [isDarkMode, setIsDarkMode] = useState(theme === \"dark\");\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [timeFilter, setTimeFilter] = useState('hourly');\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n    const now = new Date();\r\n    return now.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\r\n  });\r\n  // Add useState for submissionStats\r\n  const [submissionStats, setSubmissionStats] = useState({\r\n    labels: [],\r\n    data: []\r\n  });\r\n  const { totalTime, formatTime } = useUserActivityTime();\r\n\r\n  // Helper to get all dates from start of month to today\r\n  const getMonthDates = () => {\r\n    const now = new Date();\r\n    const year = now.getFullYear();\r\n    const month = now.getMonth();\r\n    const today = now.getDate();\r\n    const dates = [];\r\n    for (let d = 1; d <= today; d++) {\r\n      const dateObj = new Date(year, month, d);\r\n      dates.push(dateObj.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }));\r\n    }\r\n    return dates;\r\n  };\r\n\r\n  // Helper for yearly labels\r\n  const getYearlyLabels = () => {\r\n    const now = new Date();\r\n    const labels = [];\r\n    for (let i = 11; i >= 0; i--) {\r\n      const date = new Date();\r\n      date.setMonth(now.getMonth() - i);\r\n      labels.push(date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' }));\r\n    }\r\n    return labels;\r\n  };\r\n\r\n  const processSubmissionsData = (submissions, filter) => {\r\n    const stats = new Map();\r\n    const now = new Date();\r\n\r\n    if (filter === 'hourly') {\r\n      // 0-23 hours for selectedDate\r\n      for (let h = 0; h < 24; h++) {\r\n        stats.set(h.toString().padStart(2, '0'), 0);\r\n      }\r\n      const [selMonth, selDay, selYear] = selectedDate.match(/([A-Za-z]+) (\\d+), (\\d+)/).slice(1);\r\n      for (const course in submissions) {\r\n        for (const category in submissions[course]) {\r\n          for (const question in submissions[course][category]) {\r\n            for (const timestamp in submissions[course][category][question]) {\r\n              const submission = submissions[course][category][question][timestamp];\r\n              if (submission.status === 'correct') {\r\n                const date = new Date(parseFirebaseTimestamp(timestamp));\r\n                if (\r\n                  date.getFullYear() === Number(selYear) &&\r\n                  date.toLocaleString('en-US', { month: 'short' }) === selMonth &&\r\n                  date.getDate() === Number(selDay)\r\n                ) {\r\n                  const hour = date.getHours().toString().padStart(2, '0');\r\n                  if (stats.has(hour)) {\r\n                    stats.set(hour, stats.get(hour) + 1);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (filter === 'weekly') {\r\n      // Last 7 days\r\n      for (let i = 6; i >= 0; i--) {\r\n        const date = new Date();\r\n        date.setDate(now.getDate() - i);\r\n        stats.set(date.toLocaleDateString(), 0);\r\n      }\r\n      for (const course in submissions) {\r\n        for (const category in submissions[course]) {\r\n          for (const question in submissions[course][category]) {\r\n            for (const timestamp in submissions[course][category][question]) {\r\n              const submission = submissions[course][category][question][timestamp];\r\n              if (submission.status === 'correct') {\r\n                const date = new Date(parseFirebaseTimestamp(timestamp));\r\n                const key = date.toLocaleDateString();\r\n                if (stats.has(key)) {\r\n                  stats.set(key, stats.get(key) + 1);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (filter === 'monthly') {\r\n      // Last 12 months, label as \"Aug 2024\", \"Sep 2024\", etc.\r\n      const labels = getYearlyLabels();\r\n      labels.forEach(label => stats.set(label, 0));\r\n      for (const course in submissions) {\r\n        for (const category in submissions[course]) {\r\n          for (const question in submissions[course][category]) {\r\n            for (const timestamp in submissions[course][category][question]) {\r\n              const submission = submissions[course][category][question][timestamp];\r\n              if (submission.status === 'correct') {\r\n                const date = new Date(parseFirebaseTimestamp(timestamp));\r\n                const key = date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\r\n                if (stats.has(key)) {\r\n                  stats.set(key, stats.get(key) + 1);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      labels: Array.from(stats.keys()),\r\n      data: Array.from(stats.values())\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      if (!user?.uid) return;\r\n\r\n      const dbRef = ref(database);\r\n      const progressPath = `userprogress/${user.uid}`;\r\n      const submissionsPath = `Submissions/${user.uid}`;\r\n\r\n      try {\r\n        const [progressSnapshot, submissionsSnapshot] = await Promise.all([\r\n          get(child(dbRef, progressPath)),\r\n          get(child(dbRef, submissionsPath)),\r\n        ]);\r\n\r\n        let acceptedCount = 0;\r\n        let totalSubmissions = 0;\r\n        let submissionsList = [];\r\n\r\n        // Process progress data (for accepted submissions)\r\n        if (progressSnapshot.exists()) {\r\n          const progressData = progressSnapshot.val();\r\n\r\n          for (const courseKey in progressData) {\r\n            for (const subKey in progressData[courseKey]) {\r\n              for (const questionId in progressData[courseKey][subKey]) {\r\n                const progress = progressData[courseKey][subKey][questionId];\r\n                const accepted =\r\n                  typeof progress === \"object\" ? progress.accepted : progress;\r\n\r\n                if (accepted === true) {\r\n                  acceptedCount++;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Process submissions data\r\n        if (submissionsSnapshot.exists()) {\r\n          const submissionsData = submissionsSnapshot.val();\r\n          totalSubmissions = 0;\r\n\r\n          // Flatten the submissions data into an array\r\n          for (const courseKey in submissionsData) {\r\n            for (const subKey in submissionsData[courseKey]) {\r\n              for (const questionId in submissionsData[courseKey][subKey]) {\r\n                for (const timestampKey in submissionsData[courseKey][subKey][\r\n                  questionId\r\n                ]) {\r\n                  const submission =\r\n                    submissionsData[courseKey][subKey][questionId][\r\n                    timestampKey\r\n                    ];\r\n                  totalSubmissions++;\r\n\r\n                  submissionsList.push({\r\n                    problem: questionId,\r\n                    course: courseKey,\r\n                    subcourse: subKey,\r\n                    language: submission.language || \"N/A\",\r\n                    status:\r\n                      submission.status === \"correct\"\r\n                        ? \"Accepted\"\r\n                        : \"Wrong Answer\",\r\n                    runtime: \"-\", // Placeholder\r\n                    date: formatFirebaseTimestamp(timestampKey),\r\n                    timestamp: parseFirebaseTimestamp(timestampKey).getTime(),\r\n                    code: submission.code,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          // Sort submissions by timestamp in descending order\r\n          submissionsList.sort((a, b) => b.timestamp - a.timestamp);\r\n\r\n          const stats = processSubmissionsData(submissionsData, timeFilter);\r\n          setSubmissionStats(stats);\r\n        }\r\n\r\n        setProfileData((prev) => ({\r\n          ...prev,\r\n          stats: {\r\n            ...prev.stats,\r\n            acceptedSubmissions: acceptedCount,\r\n            totalSubmissions: totalSubmissions,\r\n          },\r\n          allSubmissions: submissionsList,\r\n          recentSubmissions: submissionsList.slice(0, 10), // Show only recent 10 by default\r\n        }));\r\n      } catch (err) {\r\n        console.error(\"Error fetching user data:\", err);\r\n      }\r\n    };\r\n\r\n    if (user) {\r\n      setProfileData({\r\n        username: user.name || \"Anonymous\",\r\n        email: user.email || \"No email provided\",\r\n        joinDate: formatJoinDate(Date.now()),\r\n        photoURL: user.photoURL || \"https://via.placeholder.com/150\",\r\n        allSubmissions: [],\r\n        recentSubmissions: [],\r\n        stats: {\r\n          totalSubmissions: 0,\r\n          acceptedSubmissions: 0,\r\n          streak: 0,\r\n          rank: \"Beginner\",\r\n        },\r\n      });\r\n\r\n      fetchUserData();\r\n    }\r\n  }, [user, timeFilter, selectedDate]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <LoadingPage />\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return <SignInRequiredPage />;\r\n  }\r\n\r\n  if (!profileData) {\r\n    return (\r\n      <LoadingPage />\r\n    );\r\n  }\r\n\r\n  console.log(\"Profile Data:\", profileData);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white dark:bg-gray-900\">\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          {/* Profile Header */}\r\n          <div className=\"bg-white/80 backdrop-blur-sm dark:bg-gray-800/80 rounded-2xl shadow-2xl border border-gray-200/50 dark:border-gray-700/50 p-8 mb-8\">\r\n            <div className=\"flex flex-col lg:flex-row items-start lg:items-center gap-8\">\r\n              {/* Profile Picture */}\r\n              <div className=\"relative\">\r\n                <div className=\"w-32 h-32 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 p-1\">\r\n                  <img\r\n                    src={profileData.photoURL}\r\n                    alt=\"Profile\"\r\n                    className=\"w-full h-full rounded-full border-4 border-white dark:border-gray-800\"\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n\r\n              {/* User Info */}\r\n              <div className=\"flex-1 space-y-4\">\r\n                <div className=\"flex items-center gap-4\">\r\n                  <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\r\n                    {profileData.username}\r\n                  </h1>\r\n\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div className=\"flex items-center gap-3 text-gray-600 dark:text-gray-400\">\r\n                    <Icons.Calendar />\r\n                    <span>Joined {profileData.joinDate}</span>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center gap-3 text-gray-600 dark:text-gray-400\">\r\n                    <Icons.Mail />\r\n                    <span>{profileData.email}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <p className=\"text-gray-600 dark:text-gray-400 text-lg\">\r\n                  {profileData.bio}\r\n                </p>\r\n\r\n                {/* Stats Cards */}\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-6\">\r\n                  <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white p-4 rounded-xl\">\r\n                    <div className=\"text-2xl font-bold\">\r\n                      {profileData.stats.totalSubmissions}\r\n                    </div>\r\n                    <div className=\"text-sm opacity-90\">Total Submissions</div>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-r from-green-500 to-green-600 text-white p-4 rounded-xl\">\r\n                    <div className=\"text-2xl font-bold\">\r\n                      {profileData.stats.acceptedSubmissions}\r\n                    </div>\r\n                    <div className=\"text-sm opacity-90\">Accepted</div>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-r from-purple-500 to-purple-600 text-white p-4 rounded-xl\">\r\n                    <div className=\"text-2xl font-bold\">\r\n                      {profileData.stats.rank}\r\n                    </div>\r\n                    <div className=\"text-sm opacity-90\">Rank</div>\r\n                  </div>\r\n                  <div className=\"bg-gradient-to-r from-orange-500 to-orange-600 text-white p-4 rounded-xl\">\r\n                    <div className=\"text-2xl font-bold\">\r\n                      {formatTime(totalTime)}\r\n                    </div>\r\n                    <div className=\"text-sm opacity-90\">Time Spent</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Main Content Tabs */}\r\n          <div className=\"bg-white/80 backdrop-blur-sm dark:bg-gray-800/80 rounded-2xl shadow-2xl border border-gray-200/50 dark:border-gray-700/50 mb-8\">\r\n            <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\r\n              <button\r\n                className={`px-6 py-4 text-sm font-medium transition-all duration-200 ${activeTab === \"overview\"\r\n                    ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50/50 dark:bg-blue-900/20\"\r\n                    : \"text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400\"\r\n                  }`}\r\n                onClick={() => setActiveTab(\"overview\")}\r\n              >\r\n                Overview\r\n              </button>\r\n              <button\r\n                className={`px-6 py-4 text-sm font-medium transition-all duration-200 ${activeTab === \"submissions\"\r\n                    ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50/50 dark:bg-blue-900/20\"\r\n                    : \"text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400\"\r\n                  }`}\r\n                onClick={() => setActiveTab(\"submissions\")}\r\n              >\r\n                Submissions\r\n              </button>\r\n\r\n            </div>\r\n\r\n            <div className=\"p-8\">\r\n              {activeTab === \"overview\" && (\r\n                <div className=\"space-y-8\">\r\n                  {/* Activity Graph */}\r\n                  <div>\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                      <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                        Activity\r\n                      </h3>\r\n                      <div className=\"flex gap-2\">\r\n                        {timeFilter === \"hourly\" && (\r\n                          <select\r\n                            className=\"bg-white/70 dark:bg-gray-700/70 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 text-sm\"\r\n                            value={selectedDate}\r\n                            onChange={e => setSelectedDate(e.target.value)}\r\n                          >\r\n                            {getMonthDates().map(date => (\r\n                              <option key={date} value={date}>\r\n                                {date.replace(/, \\d{4}$/, '')}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        )}\r\n                        <select\r\n                          className=\"bg-white/70 dark:bg-gray-700/70 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 text-sm\"\r\n                          value={timeFilter}\r\n                          onChange={(e) => setTimeFilter(e.target.value)}\r\n                        >\r\n                          <option value=\"hourly\">Hourly</option>\r\n                          <option value=\"weekly\">Weekly</option>\r\n                          <option value=\"monthly\">Monthly</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"bg-white/50 dark:bg-gray-800/50 rounded-xl p-6 h-[300px] flex items-center justify-center\">\r\n                      {submissionStats.data.length === 0 ||\r\n                        submissionStats.data.every((v) => v === 0) ? (\r\n                        <div className=\"text-center w-full\">\r\n                          <div className=\"w-16 h-16 mx-auto mb-4 bg-white/50 dark:bg-gray-800/50 rounded-full flex items-center justify-center\">\r\n                            <Icons.Trophy />\r\n                          </div>\r\n                          <p className=\"text-gray-600 dark:text-gray-400 text-lg\">\r\n                            No submissions\r\n                          </p>\r\n                        </div>\r\n                      ) : (\r\n                        <Line\r\n                          data={{\r\n                            labels: submissionStats.labels,\r\n                            datasets: [\r\n                              {\r\n                                data: submissionStats.data,\r\n                                borderColor: 'rgb(59, 130, 246)',\r\n                                backgroundColor: 'rgba(59, 130, 246, 0.5)',\r\n                                tension: 0.4,\r\n                                pointRadius: 4,\r\n                                pointHoverRadius: 6,\r\n                              }\r\n                            ]\r\n                          }}\r\n                          options={{\r\n                            responsive: true,\r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                              x: {\r\n                                title: {\r\n                                  display: true,\r\n                                  text:\r\n                                    timeFilter === \"hourly\"\r\n                                      ? \"Hours\"\r\n                                      : timeFilter === \"weekly\"\r\n                                        ? \"Date\"\r\n                                        : timeFilter === \"monthly\"\r\n                                          ? \"Month & Year\"\r\n                                          : \"Month & Year\",\r\n                                  font: { size: 14 }\r\n                                }\r\n                              },\r\n                              y: {\r\n                                beginAtZero: true,\r\n                                ticks: { stepSize: 1 },\r\n                                title: {\r\n                                  display: true,\r\n                                  text: \"No. of questions\",\r\n                                  font: { size: 14 },\r\n                                  color: \"#374151\"\r\n                                }\r\n                              }\r\n                            },\r\n                            plugins: {\r\n                              legend: { display: false },\r\n                              title: { display: false },\r\n                              tooltip: {\r\n                                callbacks: {\r\n                                  label: function (context) {\r\n                                    return `Correct submissions: ${context.parsed.y}`;\r\n                                  }\r\n                                }\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === \"submissions\" && (\r\n                <div>\r\n                  <div className=\"flex justify-between items-center mb-6\">\r\n                    <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                      All Submissions ({profileData.allSubmissions?.length || 0}\r\n                      )\r\n                    </h3>\r\n                    <div className=\"flex gap-3\">\r\n                      <select\r\n                        className=\"bg-white/70 dark:bg-gray-700/70 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 text-sm backdrop-blur-sm\"\r\n                        onChange={(e) => {\r\n                          const filtered = profileData.allSubmissions.filter(\r\n                            (sub) =>\r\n                              e.target.value === \"All Languages\" ||\r\n                              sub.language === e.target.value\r\n                          );\r\n                          setProfileData((prev) => ({\r\n                            ...prev,\r\n                            recentSubmissions: filtered.slice(0, 10),\r\n                          }));\r\n                        }}\r\n                      >\r\n                        <option>All Languages</option>\r\n                        <option>python</option>\r\n                        <option>javascript</option>\r\n                        <option>java</option>\r\n                        <option>cpp</option>\r\n                      </select>\r\n                      <select\r\n                        className=\"bg-white/70 dark:bg-gray-700/70 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 text-sm backdrop-blur-sm\"\r\n                        onChange={(e) => {\r\n                          const filtered = profileData.allSubmissions.filter(\r\n                            (sub) =>\r\n                              e.target.value === \"All Status\" ||\r\n                              sub.status === e.target.value\r\n                          );\r\n                          setProfileData((prev) => ({\r\n                            ...prev,\r\n                            recentSubmissions: filtered.slice(0, 10),\r\n                          }));\r\n                        }}\r\n                      >\r\n                        <option>All Status</option>\r\n                        <option>Accepted</option>\r\n                        <option>Wrong Answer</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"overflow-x-auto mb-6\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n                      <thead className=\"bg-gray-50/50 dark:bg-gray-700/50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Problem\r\n                          </th>\r\n                          <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Course\r\n                          </th>\r\n                          <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Language\r\n                          </th>\r\n                          <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Status\r\n                          </th>\r\n                          {/*\r\n                          <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Runtime\r\n                          </th>\r\n                          */}\r\n                          <th className=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\r\n                            Date\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white/30 dark:bg-gray-800/30 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                        {profileData.recentSubmissions.map(\r\n                          (submission, index) => (\r\n                            <tr\r\n                              key={index}\r\n                              className=\"hover:bg-gray-50/50 dark:hover:bg-gray-700/50 transition-colors\"\r\n                            >\r\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                                  {submission.problem}\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                  {submission.course} / {submission.subcourse}\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                  {submission.language}\r\n                                </div>\r\n                              </td>\r\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <span\r\n                                  className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(\r\n                                    submission.status\r\n                                  )}`}\r\n                                >\r\n                                  {submission.status}\r\n                                </span>\r\n                              </td>\r\n                              {/*\r\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                  {submission.runtime}\r\n                                </div>\r\n                              </td>\r\n                              */}\r\n\r\n                              <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                  {submission.date || \"N/A\"}\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n\r\n                  {/* Pagination */}\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <button\r\n                      className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-sm disabled:opacity-50\"\r\n                      disabled={profileData.recentSubmissions.length <= 10}\r\n                      onClick={() => {\r\n                        const currentIndex =\r\n                          profileData.allSubmissions.findIndex(\r\n                            (sub) =>\r\n                              sub.timestamp ===\r\n                              profileData.recentSubmissions[0].timestamp\r\n                          );\r\n                        const newIndex = Math.max(0, currentIndex - 10);\r\n                        setProfileData((prev) => ({\r\n                          ...prev,\r\n                          recentSubmissions: prev.allSubmissions.slice(\r\n                            newIndex,\r\n                            newIndex + 10\r\n                          ),\r\n                        }));\r\n                      }}\r\n                    >\r\n                      Previous\r\n                    </button>\r\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                      (\r\n                      {profileData.allSubmissions?.length || 0})\r\n                    </span>\r\n                    <button\r\n                      className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg text-sm disabled:opacity-50\"\r\n                      disabled={\r\n                        profileData.recentSubmissions.length === 0 ||\r\n                        profileData.allSubmissions.length <=\r\n                        profileData.recentSubmissions.length ||\r\n                        profileData.recentSubmissions[\r\n                          profileData.recentSubmissions.length - 1\r\n                        ].timestamp ===\r\n                        profileData.allSubmissions[\r\n                          profileData.allSubmissions.length - 1\r\n                        ].timestamp\r\n                      }\r\n                      onClick={() => {\r\n                        const currentIndex =\r\n                          profileData.allSubmissions.findIndex(\r\n                            (sub) =>\r\n                              sub.timestamp ===\r\n                              profileData.recentSubmissions[\r\n                                profileData.recentSubmissions.length - 1\r\n                              ].timestamp\r\n                          );\r\n                        const newIndex = currentIndex + 1;\r\n                        setProfileData((prev) => ({\r\n                          ...prev,\r\n                          recentSubmissions: prev.allSubmissions.slice(\r\n                            newIndex,\r\n                            newIndex + 10\r\n                          ),\r\n                        }));\r\n                      }}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;"],"names":["useUserActivityTime","totalTime","setTotalTime","useState","auth","getAuth","db","getDatabase","useEffect","currentUser","userId","uid","timeRef","ref","concat","unsubscribe","onValue","snapshot","exists","val","formatTime","milliseconds","totalSeconds","Math","floor","hours","minutes","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Icons","Trophy","_jsx","className","fill","stroke","viewBox","children","strokeLinecap","strokeLinejoin","strokeWidth","d","Calendar","Mail","parseFirebaseTimestamp","timestampKey","Date","NaN","fixed","replace","date","isNaN","getTime","getStatusColor","status","formatFirebaseTimestamp","console","warn","toLocaleString","year","month","day","hour","minute","second","formatJoinDate","timestamp","toLocaleDateString","_profileData$allSubmi","_profileData$allSubmi2","theme","useTheme","user","logout","loading","useAuth","activeTab","setActiveTab","isDarkMode","setIsDarkMode","profileData","setProfileData","timeFilter","setTimeFilter","selectedDate","setSelectedDate","submissionStats","setSubmissionStats","labels","data","processSubmissionsData","submissions","filter","stats","Map","now","h","set","toString","padStart","selMonth","selDay","selYear","match","slice","course","category","question","getFullYear","Number","getDate","getHours","has","get","i","setDate","key","getYearlyLabels","setMonth","getMonth","push","forEach","label","Array","from","keys","values","username","name","email","joinDate","photoURL","allSubmissions","recentSubmissions","totalSubmissions","acceptedSubmissions","streak","rank","async","dbRef","database","progressPath","submissionsPath","progressSnapshot","submissionsSnapshot","Promise","all","child","acceptedCount","submissionsList","progressData","courseKey","subKey","questionId","progress","accepted","submissionsData","submission","problem","subcourse","language","runtime","code","sort","a","b","prev","_objectSpread","err","error","fetchUserData","LoadingPage","log","_jsxs","src","alt","bio","onClick","value","onChange","e","target","getMonthDates","today","dates","dateObj","map","length","every","v","Line","datasets","borderColor","backgroundColor","tension","pointRadius","pointHoverRadius","options","responsive","maintainAspectRatio","scales","x","title","display","text","font","size","y","beginAtZero","ticks","stepSize","color","plugins","legend","tooltip","callbacks","context","parsed","filtered","sub","index","disabled","currentIndex","findIndex","newIndex","max","SignInRequiredPage"],"sourceRoot":""}