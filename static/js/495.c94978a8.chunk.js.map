{"version":3,"file":"static/js/495.c94978a8.chunk.js","mappings":"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","sources":["pages/CoursePage.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FaChevronRight, FaStar, FaBook, FaAward, FaChevronDown, FaCheck } from 'react-icons/fa';\r\nimport { ref, get, child } from 'firebase/database';\r\nimport { database } from '../firebase';\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nimport LoadingPage from './LoadingPage';\r\n\r\nconst CoursePage = () => {\r\n  const [courseData, setCourseData] = useState(null);\r\n  const [practiceTopics, setPracticeTopics] = useState([]);\r\n  const [userProgress, setUserProgress] = useState({});\r\n  const [progressPercent, setProgressPercent] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [openTopic, setOpenTopic] = useState(null);\r\n  const { course } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n\r\n\r\n  const fetchUserProgress = async () => {\r\n\r\n    if (!user) {\r\n      return {};\r\n    }\r\n\r\n    // console.log(user);\r\n\r\n    try {\r\n      const dbRef = ref(database);\r\n      const snapshot = await get(child(dbRef, `userprogress/${user.uid}/${course}`));\r\n\r\n      console.log(`userprogress/${user.uid}/${course}`);\r\n      console.log(\"Snapshot:\", snapshot.val());\r\n\r\n\r\n      return snapshot.exists() ? snapshot.val() : {};\r\n    } catch (error) {\r\n      console.error('Error fetching user progress:', error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const fetchPracticeTopics = async () => {\r\n    try {\r\n      const dbRef = ref(database);\r\n      const snapshot = await get(child(dbRef, `/AlgoCore/${course}/lessons`));\r\n\r\n      if (!snapshot.exists()) {\r\n        console.log('No data available');\r\n        return [];\r\n      }\r\n\r\n      const data = snapshot.val();\r\n      const practiceTopics = [];\r\n      const progressData = await fetchUserProgress();\r\n\r\n      console.log(data);\r\n\r\n\r\n      // Process each topic\r\n      Object.keys(data).forEach(topicKey => {\r\n        const topicData = data[topicKey];\r\n\r\n        // Skip if it's not a topic object\r\n        if (typeof topicData !== 'object' || !topicData.description) {\r\n          return;\r\n        }\r\n\r\n        const problems = [];\r\n\r\n        console.log(topicData);\r\n\r\n        topicData.questions?.forEach(problemData => {\r\n          console.log(problemData);\r\n\r\n          problems.push({\r\n            name: problemData,\r\n            status: 'Not Started', // Default status\r\n            difficulty: \"Easy\",\r\n            question: problemData,\r\n          });\r\n        });\r\n\r\n        // Create the topic object\r\n        practiceTopics.push({\r\n          title: topicKey,\r\n          description: topicData.description,\r\n          problems: problems,\r\n          status: topicData.status\r\n        });\r\n      });\r\n\r\n\r\n      return practiceTopics;\r\n    } catch (error) {\r\n      console.error('Error fetching data from Firebase:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateProblemStatusesWithProgress = (topics, progress) => {\r\n    if (!progress || typeof progress !== 'object') return topics;\r\n\r\n    return topics.map(topic => {\r\n      const topicProgress = progress[topic.title] || {};\r\n\r\n      const updatedProblems = topic.problems.map(problem => {\r\n        let status = 'Not Started'; // default\r\n\r\n        if (problem.name in topicProgress) {\r\n          status = topicProgress[problem.name] === true ? 'Completed' : 'Not Completed';\r\n        }\r\n\r\n        return {\r\n          ...problem,\r\n          status: status\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...topic,\r\n        problems: updatedProblems\r\n      };\r\n    });\r\n  };\r\n\r\n  const calculateProgressPercent = (topics) => {\r\n    let total = 0;\r\n    let completed = 0;\r\n\r\n    topics.forEach(topic => {\r\n      topic.problems.forEach(problem => {\r\n        total++;\r\n        if (problem.status === 'Completed') completed++;\r\n      });\r\n    });\r\n\r\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function executeAfterBoth() {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const dbRef = ref(database);\r\n        const snapshot = await get(child(dbRef, `AlgoCore/${course}/course`));\r\n\r\n        if (snapshot.exists()) {\r\n          const data = snapshot.val();\r\n          setCourseData(data);\r\n\r\n        }\r\n        else {\r\n          throw new Error('Failed to fetch course data');\r\n        }\r\n\r\n        const [topics, progress] = await Promise.all([\r\n          fetchPracticeTopics(),\r\n          fetchUserProgress()\r\n        ]);\r\n\r\n        const updatedTopics = updateProblemStatusesWithProgress(topics, progress);\r\n        setPracticeTopics(updatedTopics);\r\n\r\n        // 👇 Set the % value\r\n        const progressVal = calculateProgressPercent(updatedTopics);\r\n        setProgressPercent(progressVal);\r\n\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        setError(err.message);\r\n        setPracticeTopics(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n\r\n\r\n    executeAfterBoth();\r\n\r\n\r\n\r\n\r\n  }, [course, user]);\r\n\r\n  if (loading) {\r\n    <LoadingPage />\r\n    // return <div className=\"flex justify-center items-center min-h-screen\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"flex justify-center items-center min-h-screen\">Error: {error}</div>;\r\n  }\r\n\r\n  if (!courseData) {\r\n    return null;\r\n  }\r\n\r\n  const { title, description, stats } = courseData;\r\n  const totalProblems = practiceTopics.reduce((count, topic) => count + topic.problems.length, 0);\r\n\r\n  const completedProblems = practiceTopics.reduce(\r\n    (count, topic) => count + topic.problems.filter(p => p.status === 'Completed').length,\r\n    0\r\n  );\r\n\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 dark:bg-dark-primary text-gray-900 dark:text-gray-100 min-h-screen\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <div className=\"bg-blue-100 dark:bg-blue-900/50 p-3 rounded-lg mr-4\">\r\n                <FaBook className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\r\n              </div>\r\n              <h1 className=\"text-4xl font-bold\">{title}</h1>\r\n            </div>\r\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{description}</p>\r\n\r\n            {/* Progress Bar */}\r\n            {/* Progress Bar */}\r\n            {user && (\r\n              <div className=\"mb-6\">\r\n                <h3 className=\"text-lg font-semibold mb-2\">Course Progress</h3>\r\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-4\">\r\n                  <div\r\n                    className=\"bg-blue-600 h-4 rounded-full transition-all duration-500 ease-in-out\"\r\n                    style={{ width: `${progressPercent}%` }}\r\n                  ></div>\r\n                </div>\r\n                <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-300\">{progressPercent}% Completed</p>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">{completedProblems} Problems Completed</p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex items-center space-x-6 text-sm text-gray-600 dark:text-gray-400 mb-6\">\r\n              <span>{totalProblems} Problems</span>\r\n\r\n              <span>{stats.level}</span>\r\n            </div>\r\n\r\n\r\n            {!user && (\r\n              <div className=\"border-t border-b border-gray-200 dark:border-dark-tertiary py-4 mb-8\">\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  Please <a href=\"/login\" className=\"text-blue-600 dark:text-blue-400 hover:underline\">login</a> to track your progress\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            <h2 className=\"text-2xl font-bold mb-4\">Problems</h2>\r\n            <div className=\"space-y-4\">\r\n              {practiceTopics.map((topic, index) => (\r\n                <div key={index} className=\"bg-white dark:bg-dark-tertiary rounded-lg shadow-sm border border-gray-200 dark:border-dark-tertiary\">\r\n                  <div\r\n                    className=\"p-4 flex justify-between items-center cursor-pointer\"\r\n                    onClick={() => setOpenTopic(openTopic === index ? null : index)}\r\n                  >\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"bg-gray-100 dark:bg-dark-tertiary rounded-full w-10 h-10 flex items-center justify-center mr-4 font-bold text-lg\">{index + 1}</div>\r\n                      <div>\r\n                        <h3 className=\"font-semibold text-lg\">{topic.title.replace(/^[^a-zA-Z]*([a-zA-Z].*)$/, '$1')}</h3>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">{topic.description}</p>\r\n                      </div>\r\n                    </div>\r\n                    <FaChevronDown className={`w-5 h-5 text-gray-400 transition-transform ${openTopic === index ? 'rotate-180' : ''}`} />\r\n                  </div>\r\n                  {openTopic === index && topic.problems.length > 0 && (\r\n                    <div className=\"border-t border-gray-200 dark:border-dark-tertiary\">\r\n                      <table className=\"w-full text-left text-sm\">\r\n                        <thead className=\"text-gray-500 dark:text-gray-400\">\r\n                          <tr>\r\n                            <th className=\"p-4 font-medium\">Problem Name</th>\r\n                            <th className=\"p-4 font-medium\">Status</th>\r\n                            <th className=\"p-4 font-medium\">Difficulty</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {topic.problems.map((problem, pIndex) => (\r\n                            <tr \r\n                              key={pIndex} \r\n                              className={`border-t border-gray-200 dark:border-dark-tertiary ${topic.status === 'blocked' ? 'opacity-60' : 'hover:bg-gray-50 dark:hover:bg-gray-700/50'}`}\r\n                            >\r\n                              <td\r\n                                className={`p-4 flex items-center ${topic.status === 'blocked' \r\n                                  ? 'text-gray-400 dark:text-gray-500 cursor-not-allowed' \r\n                                  : 'text-blue-600 dark:text-blue-400 hover:underline cursor-pointer'}`}\r\n                                onClick={() => {\r\n                                  if (topic.status !== 'blocked') {\r\n                                    navigate(`/problem/${course}/${topic.title}/${problem.name}`);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                {problem.status === 'Completed' && (\r\n                                  <FaCheck className=\"text-green-500 mr-2\" />\r\n                                )}\r\n                                {problem.name}\r\n                                {topic.status === 'blocked' && (\r\n                                  <span className=\"ml-2 text-xs bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400 px-2 py-0.5 rounded\">\r\n                                    Locked\r\n                                  </span>\r\n                                )}\r\n                              </td>\r\n                              <td className=\"p-4\">\r\n                                <span className={`px-2 py-1 rounded-full text-xs ${problem.status === 'Completed'\r\n                                  ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400'\r\n                                  : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\r\n                                  }`}>\r\n                                  {problem.status}\r\n                                </span>\r\n                              </td>\r\n                              <td className=\"p-4 text-green-600 dark:text-green-400\">{problem.difficulty}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-8\">\r\n            {/* <div className=\"bg-white dark:bg-dark-tertiary p-6 rounded-lg shadow-sm border border-gray-200 dark:border-dark-tertiary\">\r\n              <div className=\"flex items-start\">\r\n                <FaAward className=\"w-10 h-10 text-yellow-500 mr-4\" />\r\n                <div>\r\n                  <h3 className=\"font-bold\">Earn certificate after completing all the problems.</h3>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoursePage;"],"names":["CoursePage","courseData","setCourseData","useState","practiceTopics","setPracticeTopics","userProgress","setUserProgress","progressPercent","setProgressPercent","loading","setLoading","error","setError","openTopic","setOpenTopic","course","useParams","navigate","useNavigate","user","useAuth","fetchUserProgress","async","dbRef","ref","database","snapshot","get","child","concat","uid","console","log","val","exists","fetchPracticeTopics","data","Object","keys","forEach","topicKey","_topicData$questions","topicData","description","problems","questions","problemData","push","name","status","difficulty","question","title","useEffect","Error","topics","progress","Promise","all","updatedTopics","updateProblemStatusesWithProgress","map","topic","topicProgress","updatedProblems","problem","_objectSpread","progressVal","total","completed","Math","round","calculateProgressPercent","err","message","executeAfterBoth","LoadingPage","_jsxs","className","children","stats","totalProblems","reduce","count","length","completedProblems","filter","p","_jsx","FaBook","style","width","level","href","index","onClick","replace","FaChevronDown","pIndex","FaCheck"],"sourceRoot":""}